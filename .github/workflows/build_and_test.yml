name: Build and Test

on:
  release:
    types: [published]
  pull_request:
    branches: '**'
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CI: true
  MONGO_URL: mongodb://localhost:27017/rocketchat?replicaSet=rs0&directConnection=true
  MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0&directConnection=true
  TOOL_NODE_FLAGS: --max_old_space_size=4096
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  yarn-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Github Info
        run: |
          echo "GITHUB_ACTION: $GITHUB_ACTION"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "github.event_name: ${{ github.event_name }}"

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 4

      - uses: actions/checkout@v3

      - name: Use Node.js 14.21.2
        uses: actions/setup-node@v3
        with:
          node-version: '14.21.2'
          cache: 'yarn'

      - name: yarn install
        run: yarn

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: yarn build
        run: yarn build --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team='rc'

      - name: Translation check
        run: yarn turbo run translation-check --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team='rc'

  unit-test:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - name: Launch MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: '6.0'
          mongodb-replica-set: rs0

      - uses: actions/checkout@v3

      - name: Use Node.js 14.21.2
        uses: actions/setup-node@v3
        with:
          node-version: '14.21.2'
          cache: 'yarn'

      - name: yarn install
        run: yarn

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Unit Test
        run: yarn testunit --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team='rc'

  lint:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.21.2
        uses: actions/setup-node@v3
        with:
          node-version: '14.21.2'
          cache: 'yarn'

      - name: yarn install
        run: yarn

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Lint
        run: yarn lint --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team='rc'

  typecheck:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.21.2
        uses: actions/setup-node@v3
        with:
          node-version: '14.21.2'
          cache: 'yarn'

      - name: yarn install
        run: yarn

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: TS typecheck
        run: yarn turbo run typecheck --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team='rc'

  meteor-build:
    runs-on: ubuntu-20.04
    needs: [yarn-build]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.21.2
        uses: actions/setup-node@v3
        with:
          node-version: '14.21.2'
          cache: 'yarn'

      - name: yarn install
        run: yarn

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Cache meteor local
        uses: actions/cache@v3
        with:
          path: ./apps/meteor/.meteor/local
          key: meteor-local-cache-${{ runner.OS }}-${{ hashFiles('apps/meteor/.meteor/versions') }}
          restore-keys: |
            meteor-local-cache-${{ runner.os }}-

      - name: Cache meteor
        uses: actions/cache@v3
        with:
          path: ~/.meteor
          key: meteor-cache-${{ runner.OS }}-${{ hashFiles('apps/meteor/.meteor/release') }}
          restore-keys: |
            meteor-cache-${{ runner.os }}-

      - name: Install Meteor
        run: |
          # Restore bin from cache
          set +e
          METEOR_SYMLINK_TARGET=$(readlink ~/.meteor/meteor)
          METEOR_TOOL_DIRECTORY=$(dirname "$METEOR_SYMLINK_TARGET")
          set -e
          LAUNCHER=$HOME/.meteor/$METEOR_TOOL_DIRECTORY/scripts/admin/launch-meteor
          if [ -e $LAUNCHER ]
          then
            echo "Cached Meteor bin found, restoring it"
            sudo cp "$LAUNCHER" "/usr/local/bin/meteor"
          else
            echo "No cached Meteor bin found."
          fi

          # only install meteor if bin isn't found
          command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh

      - name: Versions
        run: |
          npm --versions
          yarn -v
          node -v
          meteor --version
          meteor npm --versions
          meteor node -v
          git version

      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        if: "${{ env.TURBO_TEAM != '' }}"
        with:
          repo-token: ${{ secrets.RC_TURBO_GH_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Reset Meteor
        if: startsWith(github.ref, 'refs/tags/') == 'true' || github.ref == 'refs/heads/develop'
        working-directory: ./apps/meteor
        run: meteor reset

      - name: Build Rocket.Chat From Pull Request
        if: startsWith(github.ref, 'refs/pull/') == true
        env:
          METEOR_PROFILE: 1000
        run: yarn build:ci --api="http://127.0.0.1:9080" -- --debug --directory dist

      - name: Build Rocket.Chat
        if: startsWith(github.ref, 'refs/pull/') != true
        run: yarn build:ci --api="http://127.0.0.1:9080" -- --directory dist

  api-test:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  docker-build:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"

  ui-test:
    runs-on: ubuntu-20.04
    needs: [meteor-build]
    steps:
      - uses: actions/checkout@v3

      - name: Github Info
        run: echo "hello"
